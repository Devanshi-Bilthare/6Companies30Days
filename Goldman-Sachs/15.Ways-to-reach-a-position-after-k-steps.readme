class Solution {
     int mod = 1000000007;
    int countWays(int startPos, int endPos, int k,int[][] dp) {
        if(startPos == endPos && k == 0) return 1;
        if( k == 0) return 0;
        if(dp[startPos + 1000][k] != -1){
            return dp[startPos + 1000][k];
        }

        int a = countWays(startPos - 1,endPos,k-1,dp) % mod;
        int b = countWays(startPos + 1,endPos,k-1,dp) %mod;
        return dp[startPos + 1000][k] = (a+b) % mod;
    }

    public int numberOfWays(int startPos, int endPos, int k) {
        int [][] dp = new int[4001][1001];
       for(int[] ele:dp){
           Arrays.fill(ele,-1);
       }

       
       return  countWays(startPos,endPos,k,dp);
    }
}