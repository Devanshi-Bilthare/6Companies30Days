
class Solution {
    public List<String> findHighAccessEmployees(List<List<String>> access_times) {
        List<String> list = new ArrayList<>();
        Map<String,List<Integer>> map = new HashMap<>();

        for(List<String> a : access_times){
            if(!map.containsKey(a.get(0))){
                map.put(a.get(0),new ArrayList<>());
            }

            int t = Integer.parseInt(a.get(1));
            map.get(a.get(0)).add(t);
        }

        for(String emp : map.keySet()){
            List<Integer> times = map.get(emp);
            Collections.sort(times);
            if(isAccess(times)){
                list.add(emp);
            }
        }

    return list;
    }

    boolean isAccess(List<Integer> times){
        int n = times.size();

        for(int i = 2; i < n;i++){
            int curr = times.get(i);
            int prev = times.get(i-2);
            if(prev+99 >= curr){
                return true;
            }
        }

        return false;
    }
}