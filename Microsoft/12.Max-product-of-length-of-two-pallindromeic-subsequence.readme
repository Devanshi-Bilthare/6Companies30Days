class Solution {
    public int maxProduct(String s) {
        int[] max = new int[1];
        max[0] = 0;
        char[] c = s.toCharArray();
        dfs(c,0,"","",max);

        return max[0];
    }

    public void dfs(char[] c,int i,String s1,String s2,int[] max){
        if(i >= c.length){
            if(isPalind(s1) && isPalind(s2)){
                max[0] = Math.max(max[0],s1.length() * s2.length());
                
            }
            return;
        }
            dfs(c,i+1,s1 + c[i],s2,max);
            dfs(c,i+1,s1,s2 + c[i],max);
            dfs(c,i+1,s1,s2,max);
        
    }


    public boolean isPalind(String s){
        int i =0;
        int j = s.length()-1;

        while(i < j){
            if(s.charAt(i) != s.charAt(j)){
                return false;
            }

            i++;
            j--;
        }

        return true;
    }
}