class Solution {
    public int minimizeSet(int divisor1, int divisor2, int uniqueCnt1, int uniqueCnt2) {
        long d1 = (long)(divisor1);
        long d2 = (long)(divisor2);
        long u1 = (long)(uniqueCnt1);
        long u2 = (long)(uniqueCnt2);
       long left = 1;
       long right = (int) 1e10;
       long res = right;

       long lcm = (d1 *divisor2)/gcd(d1,d2);

       while(left <= right){
           long mid = left + (right-left) /2;
           long a =( mid - mid/d1);
           long b = (mid - mid/d2);
           long c = (mid - mid/lcm);
           if(a < u1 || b < u2 || c < u1 + u2){
               left = mid + 1;
           }else{
               res= Math.min(res,mid);
               right = mid-1;
           }
       }

       return (int) res;
    }

    long gcd(long a,long b){
        return b == 0 ? a : gcd(b,a % b);
    }
}