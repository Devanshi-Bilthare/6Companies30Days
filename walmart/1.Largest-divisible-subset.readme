class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        int n = nums.length;
        Arrays.sort(nums);

        int[] cnt = new int[n];
        int[] prev = new int[n];

        int max = 0;
        int idx = -1;
        for(int i =0;i< n;i++){
            cnt[i] = 1;
            prev[i] = -1;

            for(int j = i-1; j >= 0; j--){
                if(nums[i]% nums[j] == 0 && 1+cnt[j] > cnt[i]){
                    cnt[i] = cnt[j]+1;
                    prev[i] = j;
                }
            }

            if(cnt[i] > max){
                max = cnt[i];
                idx = i;
            }
        }

        List<Integer> list = new ArrayList<>();
        while(idx != -1){
            list.add(nums[idx]);
            idx = prev[idx];
        }

        return list;
    }
}