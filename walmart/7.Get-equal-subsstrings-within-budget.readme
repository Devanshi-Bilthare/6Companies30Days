*********Brute force time limit exceeded***************
class Solution {
    public int equalSubstring(String s, String t, int maxCost) {
        int n = s.length();
        int maxlen = 0;
        for(int i = 0; i <n;i++){
            int len = 0;
            int cost = 0;
            for(int j = i; j < n;j++){
                int val = Math.abs(s.charAt(j) - t.charAt(j));
                if(cost + val <= maxCost){
                    cost += val;
                    len++;
                }else{
                    break;
                }
            }
            maxlen = Math.max(maxlen,len);
        }

        return maxlen;
    }
}


*********used sliding window algo*********************
class Solution {
    public int equalSubstring(String s, String t, int maxCost) {
        int n = s.length();
        int maxlen = -1;
        int cost = 0;
        int st = 0;
        for(int i = 0; i <n;i++){
            cost += Math.abs(s.charAt(i) - t.charAt(i));
            while(cost > maxCost){
                cost -= Math.abs(s.charAt(st) - t.charAt(st));
                st++;
            }
            maxlen = Math.max(maxlen,i-st+1);
        }

        return maxlen;
    }
}