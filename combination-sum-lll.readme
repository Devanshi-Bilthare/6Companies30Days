class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();

        if(k > n) return ans;

        helper(k,n,0,ans,1,list);

        return ans;
    }

    void helper(int k, int target,int sum,List<List<Integer>> ans,int idx,List<Integer> list){
        if(k == 0 && sum == target){
            ans.add(new ArrayList<>(list));
            return;
        }
        if(k == 0 || sum > target) return;


        for(int i = idx;i< 10;i++){
            if(i > target) break;
            list.add(i);
            helper(k-1,target,sum+i,ans,i+1,list);
            list.remove(list.size()-1);
        }

        

    }


}